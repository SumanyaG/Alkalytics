name: JavaScript/TypeScript Linter
on:
  workflow_dispatch:
  push:
    paths:
      - 'src/frontend/**.js'
      - 'src/frontend/**.jsx'
      - 'src/frontend/**.ts'
      - 'src/frontend/**.tsx'
  pull_request:
    paths:
      - 'src/frontend/**.js'
      - 'src/frontend/**.jsx'
      - 'src/frontend/**.ts'
      - 'src/frontend/**.tsx'

permissions:
  contents: read
  pull-requests: write
  checks: write

jobs:
  eslint:
    name: Run ESLint
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'
          cache-dependency-path: src/frontend/yarn.lock
      
      - name: Install Yarn
        run: npm install -g yarn

      - name: Install Dependencies
        working-directory: src/frontend
        run: |
          echo "Current directory: $(pwd)"
          echo "Directory contents:"
          ls -la
          yarn install --frozen-lockfile
      
      - name: Run ESLint
        working-directory: src/frontend
        id: eslint
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            cd ../..  
            FILES=$(git diff --name-only origin/${{ github.base_ref }} HEAD | grep -E '^src/frontend/.*\.(js|jsx|ts|tsx)$' || true)
            cd src/frontend 
            
            if [ ! -z "$FILES" ]; then
              echo "Changed files found:"
              echo "$FILES"
              RELATIVE_FILES=$(echo "$FILES" | sed 's|^src/frontend/||')
              echo "Linting files:"
              echo "$RELATIVE_FILES"
              yarn eslint $RELATIVE_FILES --format json --output-file eslint_report.json
            else
              echo "No JavaScript/TypeScript files changed in frontend"
              echo '[]' > eslint_report.json
            fi
          else
            echo "Linting all JavaScript/TypeScript files in frontend"
            yarn eslint . --ext .js,.jsx,.ts,.tsx --format json --output-file eslint_report.json
          fi
      
      - name: Annotate Code Linting Results
        if: always()
        uses: ataylorme/eslint-annotate-action@v2
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
          report-json: "src/frontend/eslint_report.json"
      
      - name: Check Linting Results
        if: env.ESLINT_FAILED == 'true'
        working-directory: src/frontend
        run: exit 1